						CPU		386
						BITS	16

						%INCLUDE "UTIL.NSM"
						%INCLUDE "DEF.NSM"
						%INCLUDE "TOWNSDEF.NSM"


SECTBUF_PAGES			EQU		64		; 64*16=1024


CODE					SEGMENT USE16
ENTRY:
						JMP		SHORT REALENTRY

SEG_INT8EH				DW		0		; +02H
SEG_INT90H				DW		0		; +04H
SEG_INT91H				DW		0		; +06H
SEG_INT92H				DW		0		; +08H Reserved for FM-R Graphics BIOS
SEG_INT93H				DW		0		; +0AH
SEG_INT94H				DW		0		; +0CH Reserved for FM-R Printer BIOS
SEG_INT95H				DW		0		; +0EH Reserved for FM-R Hard-Copy BIOS
SEG_INT96H				DW		0		; +10H Reserved for FM-R Calendar BIOS
SEG_INT97H				DW		0		; +12H
SEG_INT98H				DW		0		; +14H Reserved for FM-R Mouse BIOS
SEG_INT9BH				DW		0		; +16H
SEG_INT9EH				DW		0		; +18H Reserved for FM-R Buzzer BIOS
SEG_INTAEH				DW		0		; +1AH
SEG_INTAFH				DW		0		; +1CH
SEG_INTECH				DW		0		; +1EH Reserved for FM-R OAK BIOS
SEG_INTEDH				DW		0		; +20H Reserved for FM-R OAK BIOS
SEG_INTFDH				DW		0		; +22H
						DW		0		; +24H
						DW		0		; +26H
SEG_DOSLOADER_SRC		DW		0		; +28H

REALENTRY:
						MOV		DX,0040H
						MOV		SS,DX
						MOV		SP,100H

						MOV		CS:[BOOT_DEVICE],EBX	; Sent from the IPL.  If HD, high-word is partition number.
						CALL	SETUP_REALMODE_INT_HANDLER
						MOV		BX,CS:[BOOT_DEVICE]

						MOV		WORD CS:[SECTBUF_PTR],SECTOR_BUFFER
						MOV		WORD CS:[SECTBUF_SEG],CS

						PUSH	CS
						POP		FS
						MOV		DI,CDS

						PUSH	CS
						POP		GS
						MOV		SI,CONDEV_HEADER_NEXT

						PUSH	WORD CS:[SEG_DOSLOADER_SRC]
						PUSH	0
						RETF	; JMP to DOSLOADER


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SETUP_REALMODE_INT_HANDLER:
						; Default INT Handlers be DEFAULT_INT_HANDLER of the same segment.
						MOV		AX,CS
						SHL		EAX,16
						MOV		AX,DEFAULT_INT_HANDLER

						XOR		DX,DX
						MOV		ES,DX

						MOV		CX,256
						MOV		DI,0
						REP		STOSD

						MOV		AX,NOP_INT_HANDLER
						MOV		ES:[0EEH*4],EAX

						MOV		AX,CS:[SEG_INT8EH]
						SHL		EAX,16
						MOV		ES:[08EH*4],EAX
						MOV		AX,CS:[SEG_INT90H]
						SHL		EAX,16
						MOV		ES:[090H*4],EAX
						MOV		AX,CS:[SEG_INT91H]
						SHL		EAX,16
						MOV		ES:[091H*4],EAX
						MOV		AX,CS:[SEG_INT93H]
						SHL		EAX,16
						MOV		ES:[093H*4],EAX
						MOV		AX,CS:[SEG_INT96H]
						SHL		EAX,16
						MOV		ES:[096H*4],EAX
						MOV		AX,CS:[SEG_INT97H]
						SHL		EAX,16
						MOV		ES:[097H*4],EAX
						MOV		AX,CS:[SEG_INT9BH]
						SHL		EAX,16
						MOV		ES:[09BH*4],EAX
						MOV		AX,CS:[SEG_INTAEH]
						SHL		EAX,16
						MOV		ES:[0AEH*4],EAX
						MOV		AX,CS:[SEG_INTAFH]
						SHL		EAX,16
						MOV		ES:[0AFH*4],EAX
						MOV		AX,CS:[SEG_INTFDH]
						SHL		EAX,16
						MOV		ES:[0FDH*4],EAX

						MOV		AX,CS
						SHL		EAX,16
						MOV		AX,INT20H_TO_EXIT
						MOV		ES:[020H*4],EAX

						RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

EXIT_CODE:
						MOV		AX,4C00H	; 3 bytes
						INT		21H			; 2 bytes

INT20H_TO_EXIT:
						POP		BX
						POP		GS
						PUSH	GS
						PUSH	BX

						MOV		EAX,CS:[EXIT_CODE]
						MOV		GS:[BX],EAX
						MOV		EAX,CS:[EXIT_CODE+4]
						MOV		GS:[BX+4],EAX

						IRET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


DEFAULT_INT_HANDLER:
						JMP		DEFAULT_INT_HANDLER


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


NOP_INT_HANDLER:
						IRET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


BOOT_DEVICE				DW		0
BOOT_PARTITION			DW		0
SECTBUF_PTR				DW		0
SECTBUF_SEG				DW		0

CDS						DB		(CURRENT_DIR_STRUCT_size*MAX_NUM_CDS) dup (0)

						ALIGN	16
SECTOR_BUFFER			DB		1024 dup(0)

						%INCLUDE	"DOSUTIL.NSM"
						%INCLUDE	"CONDEV.NSM"
						%INCLUDE	"CLOCKDEV.NSM"
						%INCLUDE	"TOWNS_CD.NSM"
						%INCLUDE	"BLOCKDEV.NSM"
