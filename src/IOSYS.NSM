						CPU		386
						BITS	16

						%INCLUDE "UTIL.NSM"
						%INCLUDE "DEF.NSM"
						%INCLUDE "TOWNSDEF.NSM"


BOOTSECT_SEG			EQU		8000h


CODE					SEGMENT USE16
ENTRY:
						JE		SHORT REALENTRY

SEG_INT8EH				DW		0		; +02H
SEG_INT90H				DW		0		; +04H
SEG_INT91H				DW		0		; +06H
SEG_INT92H				DW		0		; +08H Reserved for FM-R Graphics BIOS
SEG_INT93H				DW		0		; +0AH
SEG_INT94H				DW		0		; +0CH Reserved for FM-R Printer BIOS
SEG_INT95H				DW		0		; +0EH Reserved for FM-R Hard-Copy BIOS
SEG_INT96H				DW		0		; +10H Reserved for FM-R Calendar BIOS
SEG_INT97H				DW		0		; +12H
SEG_INT98H				DW		0		; +14H Reserved for FM-R Mouse BIOS
SEG_INT9BH				DW		0		; +16H
SEG_INT9EH				DW		0		; +18H Reserved for FM-R Buzzer BIOS
SEG_INTAEH				DW		0		; +1AH
SEG_INTAFH				DW		0		; +1CH
SEG_INTECH				DW		0		; +1EH Reserved for FM-R OAK BIOS
SEG_INTEDH				DW		0		; +20H Reserved for FM-R OAK BIOS
SEG_INTFDH				DW		0		; +22H

REALENTRY:
						MOV		DX,0040H
						MOV		SS,DX
						MOV		SP,100H

						MOV		CS:[BOOT_DEVICE],BX	; Sent from the IPL
						CALL	SETUP_REALMODE_INT_HANDLER

						MOV		AH,BIOSCMD_COMMON_INIT
						INT		93H


						PUSH	0040H
						POP		GS
						MOV		EAX,GS:[IOSYS_SIZE]  ; This gives the size of IO.SYS after 0050H segment.

						SHR		EAX,4
						MOV		BX,CS
						ADD		AX,BX ; AX is the next page after IO.SYS

						PUSH	AX	; Loading point in the stack.

						MOV		BX,CS:[BOOT_DEVICE]
						CMP		BL,BOOTDEV_FD
						JE		BOOT_FROM_FD
						CMP		BL,BOOTDEV_CD
						JE		BOOT_FROM_CD
						CMP		BL,BOOTDEV_HD
						JE		BOOT_FROM_HD

BOOT_FROM_HD:
BOOT_FROM_CD:
INFINITY				JMP		INFINITY



BOOT_FROM_FD:
						MOV		AL,BH
						AND		AL,0FH
						OR		AL,DISKBIOS_FDD_0
						MOV		CS:[DISKBIOS_BOOT_DEVICE],AL

						MOV		AH,DISKBIOS_CMD_03H_RESTORE
						INT		93H



						; Read IPL Sector to get BPB
						MOV		AH,DISKBIOS_CMD_05H_READ_SECTOR
						MOV		AL,CS:[DISKBIOS_BOOT_DEVICE]
						MOV		CX,0		; Track 0
						MOV		DX,0001h	; Head 0 Sector 1
						MOV		BX,1		; 1 sector
						MOV		DI,BOOTSECT_SEG
						MOV		DS,DI
						XOR		DI,DI
						INT		93H


						; ; Test FD Read
						; ; 1000h for 4 sectors
						; ; 2000h for one track
						; ; 4000h for one cylinder

						; ; 0     Trk0 Side0
						; ; 2000H Trk0 Side1
						; ; 4000H Trk1 Side0
						; ; 6000H Trk1 Side1
						; ; 7000H Trk1 Side1 Sect5

						; MOV		AH,5
						; MOV		AL,020H
						; MOV		CX,1
						; MOV		DH,1
						; MOV		DL,5
						; MOV		BX,8
						; MOV		DI,8000H
						; MOV		DS,DI
						; XOR		Di,Di
						; INT 	93H


						JMP		INFINITY



SETUP_REALMODE_INT_HANDLER:
						; Default INT Handlers be DEFAULT_INT_HANDLER of the same segment.
						MOV		AX,CS
						SHL		EAX,16
						MOV		AX,DEFAULT_INT_HANDLER

						XOR		DX,DX
						MOV		ES,DX

						MOV		CX,256
						MOV		DI,0
						REP		STOSD

						MOV		AX,CS:[SEG_INT8EH]
						SHL		EAX,16
						MOV		ES:[08EH*4],EAX
						MOV		AX,CS:[SEG_INT90H]
						SHL		EAX,16
						MOV		ES:[090H*4],EAX
						MOV		AX,CS:[SEG_INT91H]
						SHL		EAX,16
						MOV		ES:[091H*4],EAX
						MOV		AX,CS:[SEG_INT93H]
						SHL		EAX,16
						MOV		ES:[093H*4],EAX
						MOV		AX,CS:[SEG_INT97H]
						SHL		EAX,16
						MOV		ES:[097H*4],EAX
						MOV		AX,CS:[SEG_INT9BH]
						SHL		EAX,16
						MOV		ES:[09BH*4],EAX
						MOV		AX,CS:[SEG_INTAEH]
						SHL		EAX,16
						MOV		ES:[0AEH*4],EAX
						MOV		AX,CS:[SEG_INTAFH]
						SHL		EAX,16
						MOV		ES:[0AFH*4],EAX
						MOV		AX,CS:[SEG_INTFDH]
						SHL		EAX,16
						MOV		ES:[0FDH*4],EAX
						RET


DEFAULT_INT_HANDLER:
						JMP		DEFAULT_INT_HANDLER


BOOT_DEVICE				DW		0
DISKBIOS_BOOT_DEVICE	DB		0



						%INCLUDE	"CONDEV.NSM"
						%INCLUDE	"CLOCKDEV.NSM"
