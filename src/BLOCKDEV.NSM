BLKDEV_HEADER_NEXT				DW	0FFFFh	; Tentative.  Block devices next.
								DW	0FFFFh
BLKDEV_HEADER_ATTRIBWORD		DW	0800h   ; BlockDev|open/close/removable media
BLKDEV_HEADER_STRATEGY_PTR		DW	BLKDEV_STRATEGY
BLKDEV_HEADER_INTERRUPT_PTR		DW	BLKDEV_INTERRUPT
BLKDEV_HEADER_NAME				DB	"QUACK!!!"

BLKDEV_REQHDR_PTR		DD	0

INITIAL_BPB_ARRAY		DW		FD_BPB,FD_BPB,ROMDRIVE_BPB

; I think BPS should be updated when disk is re-inserted
FD_BPB:					DW		400H	; bytesPerSect
						DB		1		; sectPerCluster
						DW		1		; reservedSectors
						DB		2		; #FATs
						DW		00C0H	; #rootDirEntries
						DW		04D0H	; #sectors including reserved sectors
						DB		1		; mediaDesc
						DW		2		; #sectPerFAT
						DW		8		; #sectPerTrack
						DW		2		; #heads
						DW		0		; #hiddenSect
						DD		0		; 32-bit #sectors

ROMDRIVE_BPB:			DW		200H	; bytesPerSect
						DB		2		; sectPerCluster
						DW		1		; reservedSectors
						DB		2		; #FATs
						DW		0070H	; #rootDirEntries
						DW		0500H	; #sectors including reserved sectors
						DB		0FBh	; mediaDesc
						DW		2		; #sectPerFAT
						DW		8		; #sectPerTrack
						DW		1		; #heads
						DW		0		; #hiddenSect
						DD		0		; 32-bit #sectors

BLKDEV_STRATEGY:
						MOV		CS:[BLKDEV_REQHDR_PTR],BX
						MOV		CS:[BLKDEV_REQHDR_PTR+2],ES
						RETF

BLKDEV_INTERRUPT:
						SAVE_WORLD

						LES		BX,CS:[BLKDEV_REQHDR_PTR]
						MOV		BYTE ES:[BX+REQ_STATUS],0 ; Tentatively no error
						MOV		AL,ES:[BX+REQ_COMMAND]
						CMP		AL,0
						JE		BLKDEV_INIT

						TSUGARU_DEBUG

BLKDEV_RETURN:
						RESTORE_WORLD
						RETF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

BLKDEV_INIT:
						; Need to return (ES:BX is the request header)
						; BYTE ES:[BX+REQ_INIT_NUM_UNIT_RETURN]  Number of units, or drives under control of this driver
						; ES:[BX+REQ_INIT_BPB_ARRAY_RETURN]      Far pointer to the BPB array  Let's say it is xxxx:yyyy
						; Then,
						;   xxxx:yyyy ptr0 ptr1 ptr2 ptr3 ... ptr(#unit-1)
						; each pointer is a short pointer. xxxx:ptr0 is the first BPB.

						TSUGARU_DEBUG

						MOV		BYTE ES:[BX+REQ_INIT_NUM_UNIT_RETURN],3 ; 3 units
						MOV		AX,CS
						MOV		ES:[BX+REQ_INIT_BPB_ARRAY_RETURN+2],AX
						MOV		AX,INITIAL_BPB_ARRAY
						MOV		ES:[BX+REQ_INIT_BPB_ARRAY_RETURN],AX

						JMP		BLKDEV_RETURN

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
