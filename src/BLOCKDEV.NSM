BLKDEV_HEADER_NEXT				DW	0FFFFh	; Tentative.  Block devices next.
								DW	0FFFFh
BLKDEV_HEADER_ATTRIBWORD		DW	0800h   ; BlockDev|open/close/removable media
BLKDEV_HEADER_STRATEGY_PTR		DW	BLKDEV_STRATEGY
BLKDEV_HEADER_INTERRUPT_PTR		DW	BLKDEV_INTERRUPT
BLKDEV_HEADER_NAME				DB	"QUACK!!!"

BLKDEV_REQHDR_PTR		DD	0

INITIAL_BPB_ARRAY		DW		FD_BPB,FD_BPB,ROMDRIVE_BPB

; I think BPS should be updated when disk is re-inserted
FD_BPB:					DW		400H	; bytesPerSect
						DB		1		; sectPerCluster
						DW		1		; reservedSectors
						DB		2		; #FATs
						DW		00C0H	; #rootDirEntries
						DW		04D0H	; #sectors including reserved sectors
						DB		1		; mediaDesc
						DW		2		; #sectPerFAT
						DW		8		; #sectPerTrack
						DW		2		; #heads
						DW		0		; #hiddenSect
						DD		0		; 32-bit #sectors

ROMDRIVE_BPB:			DW		200H	; bytesPerSect
						DB		2		; sectPerCluster
						DW		1		; reservedSectors
						DB		2		; #FATs
						DW		0070H	; #rootDirEntries
						DW		0500H	; #sectors including reserved sectors
						DB		0FBh	; mediaDesc
						DW		2		; #sectPerFAT
						DW		8		; #sectPerTrack
						DW		1		; #heads
						DW		0		; #hiddenSect
						DD		0		; 32-bit #sectors

BLKDEV_STRATEGY:
						MOV		CS:[BLKDEV_REQHDR_PTR],BX
						MOV		CS:[BLKDEV_REQHDR_PTR+2],ES
						RETF

BLKDEV_INTERRUPT:
						SAVE_WORLD

						LES		BX,CS:[BLKDEV_REQHDR_PTR]
						MOV		BYTE ES:[BX+REQ_STATUS],DEVREQ_STATUS_NOERROR ; Tentatively no error
						MOV		AL,ES:[BX+REQ_COMMAND]
						CMP		AL,DEVREQ_CMD_INIT
						JE		BLKDEV_INIT
						CMP		AL,DEVREQ_CMD_MEDIA_CHECK
						JE		BLKDEV_MEDIA_CHECK
						CMP		AL,DEVREQ_CMD_BUILD_BPB
						JE		BLKDEV_BUILD_BPB
						CMP		AL,DEVREQ_CMD_READ
						JE		BLKDEV_READ

						TSUGARU_DEBUG

BLKDEV_RETURN:
						RESTORE_WORLD
						RETF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

BLKDEV_BIOS_FD_HARDERROR:
						LES		BX,CS:[BLKDEV_REQHDR_PTR]
						TEST	CL,DISKBIOS_HARDERROR_DRIVE_NOT_READY
						JNE		BLKDEV_BIOS_DRIVE_NOT_READY

						TEST	DL,DISKBIOS_HARDERROR_WRITE_PROTECTED
						JNE		BLKDEV_BIOS_WRITE_PROTECTED

						TEST	DL,DISKBIOS_HARDERROR_RECORD_NOT_FOUND+DISKBIOS_HARDERROR_CRC_ERROR
						JNE		BLKDEV_BIOS_CRC_ERROR

BLKDEV_BIOS_UNKNOWN_ERROR:
						LES		BX,CS:[BLKDEV_REQHDR_PTR]
						MOV		WORD ES:[BX+REQ_STATUS],DEVREQ_STATUS_ERROR+DEVERR_UNDEFINED
						JMP		BLKDEV_RETURN

BLKDEV_BIOS_DRIVE_NOT_READY:
						LES		BX,CS:[BLKDEV_REQHDR_PTR]
						MOV		WORD ES:[BX+REQ_STATUS],DEVREQ_STATUS_ERROR+DEVERR_DRIVE_NOT_READY
						JMP		BLKDEV_RETURN

BLKDEV_BIOS_WRITE_PROTECTED:
						LES		BX,CS:[BLKDEV_REQHDR_PTR]
						MOV		WORD ES:[BX+REQ_STATUS],DEVREQ_STATUS_ERROR+DEVERR_WRITE_PROTECTED
						JMP		BLKDEV_RETURN

BLKDEV_BIOS_CRC_ERROR
						LES		BX,CS:[BLKDEV_REQHDR_PTR]
						MOV		WORD ES:[BX+REQ_STATUS],DEVREQ_STATUS_ERROR+DEVERR_CRC_ERROR
						JMP		BLKDEV_RETURN

BLKDEV_BIOS_DEVICE_CODE_ERROR:
						LES		BX,CS:[BLKDEV_REQHDR_PTR]
						MOV		WORD ES:[BX+REQ_STATUS],DEVREQ_STATUS_ERROR+DEVERR_UNKNOWN_UNIT
						JMP		BLKDEV_RETURN

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

BLKDEV_INIT:
						; Need to return (ES:BX is the request header)
						; BYTE ES:[BX+REQ_INIT_NUM_UNIT_RETURN]  Number of units, or drives under control of this driver
						; ES:[BX+REQ_INIT_BPB_ARRAY_RETURN]      Far pointer to the BPB array  Let's say it is xxxx:yyyy
						; Then,
						;   xxxx:yyyy ptr0 ptr1 ptr2 ptr3 ... ptr(#unit-1)
						; each pointer is a short pointer. xxxx:ptr0 is the first BPB.

						MOV		BYTE ES:[BX+REQ_INIT_NUM_UNIT_RETURN],3 ; 3 units
						MOV		AX,CS
						MOV		ES:[BX+REQ_INIT_BPB_ARRAY_RETURN+2],AX
						MOV		AX,INITIAL_BPB_ARRAY
						MOV		ES:[BX+REQ_INIT_BPB_ARRAY_RETURN],AX

						JMP		BLKDEV_RETURN

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


BLKDEV_MEDIA_CHECK:
						MOV		AH,ES:[BX+REQ_UNIT]
						MOV		AL,ES:[BX+REQ_MEDIACHECK_MEDIA_DESC]

						CMP		AX,02FBh	; Unit 2 and Media Type is FBh -> ROM Drive
						JE		BLKDEV_MEDIA_CHECK_ROMDRIVE
						CMP		AH,2
						JB		BLKDEV_MEDIA_CHECK_INTERNAL_FD ; Unit 0 or 1 Internal FD

						TSUGARU_DEBUG

						JMP		BLKDEV_RETURN


BLKDEV_MEDIA_CHECK_ROMDRIVE:
						MOV		BYTE ES:[BX+REQ_MEDIACHECK_CODE_RETURN],MEDIACHECK_CODE_UNCHANGED
						MOV		DWORD ES:[BX+REQ_MEDIACHECK_VOLUME_LABEL_RETURN],0  ; How can I get this???
						JMP		BLKDEV_RETURN

BLKDEV_MEDIA_CHECK_INTERNAL_FD:
						OR		AH,20H
						MOV		AL,AH
						MOV		AH,DISKBIOS_CMD_YS_CHECK_DISK_CHANGE
						MOV		BH,1	; Clear disk-change flag (if drive ready)
						INT		93H

						; Tentatively mark as no change
						MOV		BYTE ES:[BX+REQ_MEDIACHECK_CODE_RETURN],MEDIACHECK_CODE_UNCHANGED
						MOV		DWORD ES:[BX+REQ_MEDIACHECK_VOLUME_LABEL_RETURN],0  ; How can I get this???

						CMP		AL,2	; Drive Not Ready
						JNE		BLKDEV_MEDIA_CHECK_INTERNAL_FD_DRVRDY

						MOV		WORD ES:[BX+REQ_STATUS],DEVREQ_STATUS_ERROR+DEVERR_DRIVE_NOT_READY
						JE		BLKDEV_RETURN

BLKDEV_MEDIA_CHECK_INTERNAL_FD_DRVRDY:
						OR		AL,AL
						JE		BLKDEV_RETURN

						; Probably it is a good place to try different media type and set Disk Drive Mode for the media.
						; TODO: Check Media Type and Set Up Disk BIOS Accordingly

						MOV		BYTE ES:[BX+REQ_MEDIACHECK_CODE_RETURN],MEDIACHECK_CODE_CHANGED
						MOV		DWORD ES:[BX+REQ_MEDIACHECK_VOLUME_LABEL_RETURN],0  ; How can I get this??? The previous disk has gone already!

						JMP		BLKDEV_RETURN


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

BLKDEV_READ:
						MOV		AH,ES:[BX+REQ_UNIT]
						MOV		AL,ES:[BX+REQ_READ_WRITE_MEDIA_DESC]

						CMP		AX,02FBh	; Unit 2 and Media Type is FBh -> ROM Drive
						JE		BLKDEV_READ_ROMDRIVE
						CMP		AH,2
						JB		BLKDEV_READ_INTERNAL_FD ; Unit 0 or 1 Internal FD

						TSUGARU_DEBUG

						JMP		BLKDEV_RETURN


BLKDEV_READ_ROMDRIVE:
						MOV		AL,DISKBIOS_ROMDISK
						MOV		AH,DISKBIOS_CMD_05H_READ_SECTOR
						MOV		CX,0
						MOV		DX,ES:[BX+REQ_READ_WRITE_LBA]
						MOV		DS,ES:[BX+REQ_READ_WRITE_BUFFER_SEG]
						MOV		DI,ES:[BX+REQ_READ_WRITE_BUFFER_PTR]
						MOV		BX,ES:[BX+REQ_READ_WRITE_SECTOR_COUNT]	; Do BX last.  Need ES:BX for other parameters.
						INT		93H

						LES		BX,CS:[BLKDEV_REQHDR_PTR]

						JMP		BLKDEV_RETURN


BLKDEV_READ_INTERNAL_FD:
						TSUGARU_DEBUG

						MOV		AH,DISKBIOS_CMD_01H_GET_DRV_MODE
						MOV		AL,ES:[BX+REQ_UNIT]
						OR		AL,20H
						XOR		CH,CH
						INT		93H

						CMP		AH,80h
						JE		BLKDEV_BIOS_FD_HARDERROR
						CMP		AH,02H
						JE		BLKDEV_BIOS_DEVICE_CODE_ERROR

						; Now BH=number of heads, and BL=sectPerTrack
						OR		BH,BH
						JE		BLKDEV_BIOS_UNKNOWN_ERROR
						OR		BL,BL
						JE		BLKDEV_BIOS_UNKNOWN_ERROR

						MOV		DX,BX	; DH is number of heads, DL is sectPerTrack

						LES		BX,CS:[BLKDEV_REQHDR_PTR]	; ES:BX is request header again.

						MOV		AX,ES:[BX+REQ_READ_WRITE_LBA]
						DIV		DL

						; AH is sector number.  AL is track (C*2+H)

						INC		AH		; Sector number starts with 1, not 0.
						MOV		DL,AH	; DL is sector number

						MOVZX	AX,AL
						DIV		DH

						; AL is Cylinder,  AH is head

						MOVZX	CX,AL	; CX is cylinder
						MOV		DH,AH	; DH is head

						MOV		DS,ES:[BX+REQ_READ_WRITE_BUFFER_SEG]
						MOV		DI,ES:[BX+REQ_READ_WRITE_BUFFER_PTR]

						MOV		AH,DISKBIOS_CMD_05H_READ_SECTOR
						MOV		AL,ES:[BX+REQ_UNIT]
						OR		AL,20H

						MOV		BX,ES:[BX+REQ_READ_WRITE_SECTOR_COUNT]	; Do BX last.  Need ES:BX for other parameters.
						INT		93H

						CMP		AH,80h
						JE		BLKDEV_BIOS_FD_HARDERROR
						CMP		AH,02H
						JE		BLKDEV_BIOS_DEVICE_CODE_ERROR

						JMP		BLKDEV_RETURN


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

BLKDEV_BUILD_BPB:
						MOV		AH,ES:[BX+REQ_UNIT]
						MOV		AL,ES:[BX+REQ_READ_WRITE_MEDIA_DESC]

						CMP		AX,02FBh	; Unit 2 and Media Type is FBh -> ROM Drive
						JE		BLKDEV_BUILD_BPB_ROMDRIVE
						CMP		AL,2
						JB		BLKDEV_BUILD_BPB_INTERNAL_FD

						TSUGARU_DEBUG

						JMP		BLKDEV_RETURN

BLKDEV_BUILD_BPB_ROMDRIVE:
						MOV		WORD ES:[BX+REQ_BUILDBPB_PTR_RETURN],ROMDRIVE_BPB
						MOV		ES:[BX+REQ_BUILDBPB_PTR_RETURN+2],CS
						JMP		BLKDEV_RETURN


BLKDEV_BUILD_BPB_INTERNAL_FD:
						MOV		AL,ES:[BX+REQ_UNIT]
						OR		AL,20H
						MOV		AH,DISKBIOS_CMD_05H_READ_SECTOR
						XOR		CX,CX	; Cylinder=0
						MOV		DX,1	; Sector=1, Head=0
						LDS		DI,CS:[SECTBUF_PTR]
						MOV		BX,1	; Do BX last.  May need ES:BX for other parameters.
						INT		93H

						LES		BX,CS:[BLKDEV_REQHDR_PTR]

						ADD		DI,BPB_POS_IN_IPL
						MOV		ES:[BX+REQ_BUILDBPB_PTR_RETURN],DI
						MOV		ES:[BX+REQ_BUILDBPB_PTR_RETURN+2],DS

						TSUGARU_DEBUG

						JMP		BLKDEV_RETURN

;BLKDEV_BUILD_BPB_LBA:
;						MOV		AL,
;						MOV		AH,DISKBIOS_CMD_05H_READ_SECTOR
;						XOR		CX,CX	; Sector LBA High=0
;						XOR		DX,DX	; Sector LBA Low=0
;						LDS		DI,CS:[SECTBUF_PTR]
;						MOV		BX,1	; Do BX last.  May need ES:BX for other parameters.
;						INT		93H
;
;						LES		BX,CS:[BLKDEV_REQHDR_PTR]
;
;						ADD		DI,BPB_POS_IN_IPL
;						MOV		ES:[BX+REQ_BUILDBPB_PTR_RETURN],DI
;						MOV		ES:[BX+REQ_BUILDBPB_PTR_RETURN+2],DS
;
;						TSUGARU_DEBUG
;
;						JMP		BLKDEV_RETURN

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

