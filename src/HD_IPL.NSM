; Requirement:
; The image generator or formatter must set up the IPL so that:
;     BYTE CS:01FBH is the partition 
;     DWORD CS:01FCH is the first sector LBA (i.e. the LBA where this IPL is written)

; Root directory will be read from B000:4000
ROOTDIR_READ_OFFSET		EQU		4000h

PARTITION_NUMBER			EQU		01FBh
PARTITION_LBA				EQU		01FCh



						CPU		386
						BITS	16

						%INCLUDE "UTIL.NSM"
						%INCLUDE "DEF.NSM"
						%INCLUDE "TOWNSDEF.NSM"


CODE					SEGMENT USE16

						DB		"IPL4"

						JMP		SHORT REALMAIN

						PLACE	000BH

						; BIOS Parameter Block.  Must be filled by the IPL generator.
						DW		0		; ? bytes per sector
						DB		0		; ? sector per cluster
						DW		0		; ? reserved sector (IPL)
						DB		0		; ? File Allocation Tables
						DW		0		; ? root-directory entries
						DW		0		; ? (1232) sectors
						DB		0		; Media Descriptor
						DW		0		; ? sectors per FAT
						DW		0		; ? sectors per track
						DW		0		; ? heads
						DD		0		; ? hidden sectors
						DD		0		; 32-bit number of sectors (Used as IO.SYS location in Fujitsu IPL4)


; Offset +0BH to +23H will be BPB
; Fujitsu IPL uses dword at offset +20H as IO.SYS location (LBA if HDD, CHR if FDD)

						PLACE	005EH

; REALMAIN must be at 005EH
REALMAIN:
						CMP		BL,BOOTDEV_HD
						JE		BOOT
ERROR_END:
						RETF

IOSYS_FILENAME			DB		"IO      SYS"

;	Incoming BH is the unit number

BOOT:
; Read IO.SYS 64KB from sector 1 from 0400H, then JMP to 0050:0

						MOV		AX,CS
						MOV		DS,AX
						MOV		ES,AX
						MOV		FS,AX
						MOV		DI,BPB_POS_IN_IPL	; FS:DI is BPB

						MOV		[BOOT_DEVICE],BX

						AND		BH,7
						OR		BH,DISKBIOS_SCSI_0
						MOV		[DISKBIOS_DEVICE_CODE],BH

						; Read Directory from B100:0000

						CALL	BPB_CALC_ROOTDIR_SECT_CT
						MOV		BX,AX
						MOV		[ROOTDIR_NUM_SECTORS],AX


						; BX is the number of sectors.


						CALL	BPB_CALC_ROOTDIR_LBA
						MOV		[ROOTDIR_SECTOR],AX


						; AX is logical sector of the root directory.

						CALL	BPB_LOGICAL_SECTOR_TO_HD_LBA
						ADD		EAX,CS:[PARTITION_LBA]

						; EAX is LBA of the root directory.

						MOV		ECX,EAX
						SHR		ECX,16
						MOV		DX,AX

						MOV		DI,ROOTDIR_READ_OFFSET
						MOV		AL,[DISKBIOS_DEVICE_CODE]
						CALL	READ_SECTORS
						JC		DISK_READ_ERROR

						MOV		DI,ROOTDIR_READ_OFFSET
						MOV		SI,IOSYS_FILENAME
						MOV		DX,[BPB_POS_IN_IPL+BPB_NUM_ROOT_DIR_ENT]
FIND_IOSYS_LOOP:
						PUSH	SI
						PUSH	DI
						MOV		CX,11
						CLD
						REP		CMPSB
						POP		DI
						POP		SI

						JE		FOUND_IOSYS

						DEC		DX
						JE		IOSYS_NOT_FOUND
						ADD		DI,DIRENT_LENGTH
						JMP		FIND_IOSYS_LOOP

FOUND_IOSYS:
						MOV		EAX,[DI+DIRENT_FILE_SIZE]
						MOVZX	ECX,WORD [BPB_POS_IN_IPL+BPB_BYTES_PER_SECTOR]

						ADD		EAX,ECX	; For rounding up (+bytesPerSector-1)
						DEC		EAX

						CDQ
						DIV		ECX

						MOV		EBX,EAX	; BX is number of sectors.

						PUSH	BX
						MOV		AX,[DI+DIRENT_FIRST_CLUSTER]

						XCHG	DI,BX
						MOV		DI,BPB_POS_IN_IPL
						CALL	BPB_CLUSTER_TO_SECT_CT
						ADD		AX,[ROOTDIR_SECTOR]
						ADD		AX,[ROOTDIR_NUM_SECTORS]

						CALL	BPB_LOGICAL_SECTOR_TO_HD_LBA
						ADD		EAX,CS:[PARTITION_LBA]
						SHLD	ECX,EAX,16
						MOV		DX,AX

						XCHG	DI,BX

						POP		BX

						MOV		AL,CS:[DISKBIOS_DEVICE_CODE]
						PUSH	WORD IOSYS_SEGMENT
						POP		DS

						XOR		DI,DI
						CALL	READ_SECTORS
						JC		DISK_READ_ERROR

						MOVZX	BX,BYTE CS:[PARTITION_NUMBER]	; Partition number in high-word of EBX
						SHL		EBX,16
						MOV		BX,CS:[BOOT_DEVICE]

						DB		0EAH ; JMPF
						DW		0000H
						DW		0050H


DISK_READ_ERROR:
IOSYS_NOT_FOUND:
						STC
						RETF	; Return to the SYSROM



; Input
;   AL		20h or 21h
;   CX		LBA High
;	DX		LBA Low
;	BX		Number of Sectors
;	DS:DI	Data Buffer
; Output
;   AH		BIOS Error Code
;   CX		Error Info
;   CF		Set if Error
READ_SECTORS:
						MOV		AH,DISKBIOS_CMD_05H_READ_SECTOR

						; How can I write CALL 		FAR PTR 0FFFBH:0014H
						DB		9AH		; CALLF FFFB:0014
						DW		 0014H
						DW		0FFFBH

						RET



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

						%INCLUDE	"DOSUTIL.NSM"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


BOOT_DEVICE				DW		0
DISKBIOS_DEVICE_CODE	DB		0h
ROOTDIR_SECTOR			DW		0
ROOTDIR_NUM_SECTORS		DW		0
