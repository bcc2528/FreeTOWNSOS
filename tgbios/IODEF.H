#ifndef IODEF_H_IS_INCLUDED
#define IODEF_H_IS_INCLUDED

#define NUM_CRTC_REGS 32

enum
{
	TOWNSIO_PIC_PRIMARY_ICW1=          0x00,
	TOWNSIO_PIC_PRIMARY_ICW2_3_4_OCW=  0x02,
	TOWNSIO_PIC_SECONDARY_ICW1=        0x10,
	TOWNSIO_PIC_SECONDARY_ICW2_3_4_OCW=0x12,

	TOWNSIO_RESET_REASON=              0x20,
	TOWNSIO_POWER_CONTROL=             0x22,

	TOWNSIO_CPU_MISC3=                 0x24,

	TOWNSIO_CPU_MISC4=                 0x25, // FM TOWNS Techincal Databook p.778

	TOWNSIO_FREERUN_TIMER     =0x26,
	TOWNSIO_FREERUN_TIMER_LOW =0x26,
	TOWNSIO_FREERUN_TIMER_HIGH=0x27,

	TOWNSIO_NMI_MASK=      0x28,

	TOWNSIO_MACHINE_ID_LOW=         0x30,
	TOWNSIO_MACHINE_ID_HIGH=        0x31,

	TOWNSIO_SERIAL_ROM_CTRL=        0x32,

	TOWNSIO_TIMER0_COUNT=             0x40,
	TOWNSIO_TIMER1_COUNT=             0x42,
	TOWNSIO_TIMER2_COUNT=             0x44,
	TOWNSIO_TIMER_0_1_2_CTRL=         0x46,
	TOWNSIO_TIMER3_COUNT=             0x50,
	TOWNSIO_TIMER4_COUNT=             0x52,
	TOWNSIO_TIMER5_COUNT=             0x54,
	TOWNSIO_TIMER_3_4_5_CTRL=         0x56,
	TOWNSIO_TIMER_INT_CTRL_INT_REASON=0x60,

	TOWNSIO_INTERVAL_TIMER2_CONTROL=  0x68, // FM TOWNS Technical Databook p.779
	TOWNSIO_INTERVAL_TIMER2_DATA_LOW= 0x6A, // FM TOWNS Technical Databook p.779
	TOWNSIO_INTERVAL_TIMER2_DATA_HIGH=0x6B, // FM TOWNS Technical Databook p.779

	TOWNSIO_TIMER_1US_WAIT=           0x6C, // Since Towns 20F

	TOWNSIO_RTC_DATA=                 0x70,
	TOWNSIO_RTC_COMMAND=              0x80,

	TOWNSIO_DMAC_INITIALIZE=          0xA0,
	TOWNSIO_DMAC_CHANNEL=             0xA1,
	TOWNSIO_DMAC_COUNT_LOW=           0xA2,
	TOWNSIO_DMAC_COUNT_HIGH=          0xA3,
	TOWNSIO_DMAC_ADDRESS_LOWEST=      0xA4,
	TOWNSIO_DMAC_ADDRESS_MIDLOW=      0xA5,
	TOWNSIO_DMAC_ADDRESS_MIDHIGH=     0xA6,
	TOWNSIO_DMAC_ADDRESS_HIGHEST=     0xA7,
	TOWNSIO_DMAC_DEVICE_CONTROL_LOW=  0xA8,
	TOWNSIO_DMAC_DEVICE_CONTROL_HIGH= 0xA9,
	TOWNSIO_DMAC_MODE_CONTROL=        0xAA,
	TOWNSIO_DMAC_STATUS=              0xAB,
	TOWNSIO_DMAC_TEMPORARY_REG_LOW=   0xAC,
	TOWNSIO_DMAC_TEMPORARY_REG_HIGH=  0xAD,
	TOWNSIO_DMAC_REQUEST=             0xAE,
	TOWNSIO_DMAC_MASK=                0xAF,

	TOWNSIO_EXDMAC_INITIALIZE=          0xB0,
	TOWNSIO_EXDMAC_CHANNEL=             0xB1,
	TOWNSIO_EXDMAC_COUNT_LOW=           0xB2,
	TOWNSIO_EXDMAC_COUNT_HIGH=          0xB3,
	TOWNSIO_EXDMAC_ADDRESS_LOWEST=      0xB4,
	TOWNSIO_EXDMAC_ADDRESS_MIDLOW=      0xB5,
	TOWNSIO_EXDMAC_ADDRESS_MIDHIGH=     0xB6,
	TOWNSIO_EXDMAC_ADDRESS_HIGHEST=     0xB7,
	TOWNSIO_EXDMAC_DEVICE_CONTROL_LOW=  0xB8,
	TOWNSIO_EXDMAC_DEVICE_CONTROL_HIGH= 0xB9,
	TOWNSIO_EXDMAC_MODE_CONTROL=        0xBA,
	TOWNSIO_EXDMAC_STATUS=              0xBB,
	TOWNSIO_EXDMAC_TEMPORARY_REG_LOW=   0xBC,
	TOWNSIO_EXDMAC_TEMPORARY_REG_HIGH=  0xBD,
	TOWNSIO_EXDMAC_REQUEST=             0xBE,
	TOWNSIO_EXDMAC_MASK=                0xBF,

	TOWNSIO_80486_CACHE_CONTROL=      0xC0,
	TOWNSIO_80486_CACHE_DIAGNOSTIC=   0xC2,

	TOWNSIO_FDC_STATUS_COMMAND=       0x200, // [2] pp.253
	TOWNSIO_FDC_TRACK=                0x202, // [2] pp.253
	TOWNSIO_FDC_SECTOR=               0x204, // [2] pp.253
	TOWNSIO_FDC_DATA=                 0x206, // [2] pp.253
	TOWNSIO_FDC_DRIVE_STATUS_CONTROL= 0x208, // [2] pp.253
	TOWNSIO_FDC_DRIVE_SELECT=         0x20C, // [2] pp.253
	TOWNSIO_FDC_FDDV_EXT=             0x20D, // [2] pp.809
	TOWNSIO_FDC_DRIVE_SWITCH=         0x20E, // [2] pp.253

	TOWNSIO_FMR_RESOLUTION=           0x400, // [2] pp.91

	TOWNSIO_FMR_VRAM_OR_MAINRAM=      0x404, // [2] pp.91

	TOWNSIO_SPRITE_ADDRESS=           0x450, // [2] pp.128
	TOWNSIO_SPRITE_DATA=              0x452, // [2] pp.128

	TOWNSIO_VRAMACCESSCTRL_ADDR=      0x458, // [2] pp.17,pp.112
	TOWNSIO_VRAMACCESSCTRL_DATA_LOW=  0x45A, // [2] pp.17,pp.112
	TOWNSIO_VRAMACCESSCTRL_DATA_HIGH= 0x45B, // [2] pp.17,pp.112

	TOWNSIO_CRTC_ADDRESS=             0x440,
	TOWNSIO_CRTC_DATA_LOW=            0x442,
	TOWNSIO_CRTC_DATA_HIGH=           0x443,

	TOWNSIO_VIDEO_OUT_CTRL_ADDRESS=   0x448,
	TOWNSIO_VIDEO_OUT_CTRL_DATA=      0x44A,

	TOWNSIO_DPMD_SPRITEBUSY_SPRITEPAGE=0x44C,

	TOWNSIO_MX_HIRES=                 0x470,
	TOWNSIO_MX_VRAMSIZE=              0x471,
	TOWNSIO_MX_IMGOUT_ADDR_LOW=       0x472,
	TOWNSIO_MX_IMGOUT_ADDR_HIGH=      0x473,
	TOWNSIO_MX_IMGOUT_D0=             0x474,
	TOWNSIO_MX_IMGOUT_D1=             0x475,
	TOWNSIO_MX_IMGOUT_D2=             0x476,
	TOWNSIO_MX_IMGOUT_D3=             0x477,

	TOWNSIO_SYSROM_DICROM=            0x480, // [2] pp.91
	TOWNSIO_DICROM_BANK=              0x484, // [2] pp.92

	TOWNSIO_MEMCARD_STATUS=           0x48A, // [2] pp.93
	TOWNSIO_MEMCARD_BANK=             0x490, // [2] pp.794
	TOWNSIO_MEMCARD_ATTRIB=           0x491, // [2] pp.795

	TOWNSIO_CDROM_CAPS=               0x4B0, // FM TOWNS Techincal Databook p.847

	TOWNSIO_CDROM_MASTER_CTRL_STATUS=0x4C0, // [2] pp.224
	TOWNSIO_CDROM_COMMAND_STATUS=    0x4C2, // [2] pp.224
	TOWNSIO_CDROM_PARAMETER_DATA=    0x4C4, // [2] pp.224
	TOWNSIO_CDROM_TRANSFER_CTRL=     0x4C6, // [2] pp.227
	TOWNSIO_CDROM_CACHE_2XSPEED=     0x4C8, // [2] pp.847
	TOWNSIO_CDROM_SUBCODE_STATUS=    0x4CC,
	TOWNSIO_CDROM_SUBCODE_DATA=      0x4CD,

	TOWNSIO_GAMEPORT_A_INPUT=        0x4D0,
	TOWNSIO_GAMEPORT_B_INPUT=        0x4D2,
	TOWNSIO_GAMEPORT_OUTPUT=         0x4D6,

	TOWNSIO_SOUND_MUTE=              0x4D5, // [2] pp.18,
	TOWNSIO_SOUND_STATUS_ADDRESS0=   0x4D8, // [2] pp.18,
	TOWNSIO_SOUND_DATA0=             0x4DA, // [2] pp.18,
	TOWNSIO_SOUND_ADDRESS1=          0x4DC, // [2] pp.18,
	TOWNSIO_SOUND_DATA1=             0x4DE, // [2] pp.18,

	TOWNSIO_SOUND_SAMPLING_DATA=     0x4E7, // [2] pp.179,
	TOWNSIO_SOUND_SAMPLING_FLAGS=    0x4E8, // [2] pp.179,

	TOWNSIO_SOUND_INT_REASON=        0x4E9, // [2] pp.19,
	TOWNSIO_SOUND_PCM_INT_MASK=      0x4EA, // [2] pp.19,
	TOWNSIO_SOUND_PCM_INT=           0x4EB, // [2] pp.19,
	TOWNSIO_SOUND_PCM_ENV=           0x4F0, // [2] pp.19,
	TOWNSIO_SOUND_PCM_PAN=           0x4F1, // [2] pp.19,
	TOWNSIO_SOUND_PCM_FDL=           0x4F2, // [2] pp.19,
	TOWNSIO_SOUND_PCM_FDH=           0x4F3, // [2] pp.19,
	TOWNSIO_SOUND_PCM_LSL=           0x4F4, // [2] pp.19,
	TOWNSIO_SOUND_PCM_LSH=           0x4F5, // [2] pp.19,
	TOWNSIO_SOUND_PCM_ST=            0x4F6, // [2] pp.19,
	TOWNSIO_SOUND_PCM_CTRL=          0x4F7, // [2] pp.19,
	TOWNSIO_SOUND_PCM_CH_ON_OFF=     0x4F8, // [2] pp.19,

	// Electric Volume affects multiple devices.
	// FMTownsCommon class instead of Sound or CDRom classes intercepts these.
	TOWNSIO_ELEVOL_1_DATA=           0x4E0, // [2] pp.18, pp.174
	TOWNSIO_ELEVOL_1_COM=            0x4E1, // [2] pp.18, pp.174
	TOWNSIO_ELEVOL_2_DATA=           0x4E2, // [2] pp.18, pp.174
	TOWNSIO_ELEVOL_2_COM=            0x4E3, // [2] pp.18, pp.174

	TOWNSIO_HIGHRESPCM_BANK=         0x510, // [2] pp.832
	TOWNSIO_HIGHRESPCM_DMASTATUS=    0x511, // [2] pp.832
	TOWNSIO_HIGHRESPCM_DMACOUNT_LOW= 0x512, // [2] pp.833
	TOWNSIO_HIGHRESPCM_DMACOUNT_HIGH=0x513, // [2] pp.833
	TOWNSIO_HIGHRESPCM_DMAADDR_LOW=  0x514, // [2] pp.834
	TOWNSIO_HIGHRESPCM_DMAADDR_MIDLOW=0x515, // [2] pp.834
	TOWNSIO_HIGHRESPCM_DMAADDR_MIDHIGH=0x516, // [2] pp.834
	TOWNSIO_HIGHRESPCM_DMAADDR_HIGH= 0x517, // [2] pp.834
	TOWNSIO_HIGHRESPCM_CLOCK=0x518,         // [2] pp.834
	TOWNSIO_HIGHRESPCM_MODE=         0x519, // [2] pp.835
	TOWNSIO_HIGHRESPCM_SYSCONTROL=   0x51A, // [2] pp.836
	TOWNSIO_HIGHRESPCM_BUFFCONTROL=  0x51B, // [2] pp.837
	TOWNSIO_HIGHRESPCM_REC_PLAYBACK= 0x51C, // [2] pp.838
	TOWNSIO_HIGHRESPCM_REC_PEAK_MON= 0x51D, // [2] pp.839
	TOWNSIO_HIGHRESPCM_DATA_LOW=     0x51E, // [2] pp.840
	TOWNSIO_HIGHRESPCM_DATA_HIGH=    0x51F, // [2] pp.840

	TOWNSIO_NMI_MASK_STATUS=         0x5C0, // FM TOWNS Technical Databook p.19

	TOWNSIO_TVRAM_WRITE=             0x5C8, // [2] pp.19, pp.94
	TOWNSIO_WRITE_TO_CLEAR_VSYNCIRQ= 0x5CA, // [2] pp.19, pp.95

	TOWNSIO_MAINRAM_WAIT_1STGEN=     0x5E0,
	TOWNSIO_MAINRAM_WAIT=            0x5E2,
	TOWNSIO_VRAMWAIT=                0x5E6,
	TOWNSIO_MEMSIZE=                  0x5E8, // [2] pp.827
	TOWNSIO_FASTMODE=                0x5EC, // [2] pp.794
	TOWNSIO_MAXIMUM_CLOCK=           0x5ED, // FM TOWNS Techincal Databook p.800

	TOWNSIO_VRAMCACHE_CONTROL=       0x5EE, // FM TOWNS Techincal Databook p.816

	TOWNSIO_KEYBOARD_DATA=       0x600, // [2] pp.234
	TOWNSIO_KEYBOARD_STATUS_CMD= 0x602, // [2] pp.231
	TOWNSIO_KEYBOARD_IRQ=        0x604, // [2] pp.236

	TOWNSIO_BUFFUL=               0x606, // FM TOWNS Techincal Databook p.789

	TOWNSIO_PRINTER_STATUS1_DATA=     0x800, // FM TOWNS Techincal Databook p.20
	TOWNSIO_PRINTER_STATUS2_CONTROL=  0x802, // FM TOWNS Techincal Databook p.20
	TOWNSIO_PRINTER_INT_CONTROL=      0x804, // FM TOWNS Techincal Databook p.20

	TOWNSIO_RS232C_STATUS_COMMAND=0xA02, // [2] pp.269
	TOWNSIO_RS232C_DATA=          0xA00, // [2] pp.274
	TOWNSIO_RS232C_STATUS2=       0xA04, // FM TOWNS Techincal Databook p.20
	TOWNSIO_RS232C_INT_REASON=    0xA06, // [2] pp.275
	TOWNSIO_RS232C_INT_CONTROL=   0xA08, // [2] pp.276
	TOWNSIO_RS232C_MODEM_CONTROL= 0xA0A, // FM TOWNS Techincal Databook p.21

	TOWNSIO_FUSART_FIFO_MODE=     0xA0C, // FM TOWNS Technical Databook p.829
	TOWNSIO_FUSART_FIFO_STATUS=   0xA0D, // FM TOWNS Technical Databook p.829
	TOWNSIO_FUSART_FIFO_CONTROL=  0xA0E, // FM TOWNS Technical Databook p.830

	TOWNSIO_SCSI_DATA=           0xC30, // [2] pp.263
	TOWNSIO_SCSI_STATUS_CONTROL= 0xC32, // [2] pp.262
	TOWNSIO_SCSI_WORD_TFR_AVAIL= 0xC34, // [2] pp.801


	TOWNSIO_MIDI_CARD1_DATREG1=0x0E50,         // MIDI card(MT-402 or 403) No.1 Out port 1 datReg1 (from Linux source)
	TOWNSIO_MIDI_CARD1_CMDREG1=0x0E51,         // MIDI card(MT-402 or 403) No.1 cmdReg1 (Linux source)
	TOWNSIO_MIDI_CARD1_DATREG2=0x0E54,         // MIDI card(MT-402 or 403) No.1
	TOWNSIO_MIDI_CARD1_CMDREG2=0x0E55,         // MIDI card(MT-402 or 403) No.1
	TOWNSIO_MIDI_CARD1_FIFODAT=0x0E52,         // MIDI card(MT-402 or 403) No.1
	TOWNSIO_MIDI_CARD1_FIFOREG=0x0E53,         // MIDI card(MT-402 or 403) No.1

	TOWNSIO_MIDI_CARD2_DATREG1=0x0E58,         // MIDI card 2
	TOWNSIO_MIDI_CARD2_CMDREG1=0x0E59,         // MIDI card 2
	TOWNSIO_MIDI_CARD2_DATREG2=0x0E5C,         // MIDI card 2
	TOWNSIO_MIDI_CARD2_CMDREG2=0x0E5D,         // MIDI card 2
	TOWNSIO_MIDI_CARD2_FIFODAT=0x0E5A,         // MIDI card 2
	TOWNSIO_MIDI_CARD2_FIFOREG=0x0E5B,         // MIDI card 2

	TOWNSIO_MIDI_CARD3EF_DATREG1=0x0E60,       // MIDI card 3 [E][F] according to Linux midi.c
	TOWNSIO_MIDI_CARD3EF_CMDREG1=0x0E61,       // MIDI card 3 [E][F]
	TOWNSIO_MIDI_CARD3EF_DATREG2=0x0E64,       // MIDI card 3 [E][F] according to Linux midi.c
	TOWNSIO_MIDI_CARD3EF_CMDREG2=0x0E65,       // MIDI card 3 [E][F]
	TOWNSIO_MIDI_CARD3EF_FIFODAT=0x0E62,       // MIDI card 3 [E][F] according to Linux midi.c
	TOWNSIO_MIDI_CARD3EF_FIFOREG=0x0E63,       // MIDI card 3 [E][F]

	TOWNSIO_MIDI_CARD3GH_DATREG1=0x0E68,       // MIDI card 3 [G][H] according to Linux midi.c
	TOWNSIO_MIDI_CARD3GH_CMDREG1=0x0E69,       // MIDI card 3 [G][H]
	TOWNSIO_MIDI_CARD3GH_DATREG2=0x0E6C,       // MIDI card 3 [G][H] according to Linux midi.c
	TOWNSIO_MIDI_CARD3GH_CMDREG2=0x0E6D,       // MIDI card 3 [G][H]
	TOWNSIO_MIDI_CARD3GH_FIFODAT=0x0E6A,       // MIDI card 3 [G][H] according to Linux midi.c
	TOWNSIO_MIDI_CARD3GH_FIFORET=0x0E6B,       // MIDI card 3 [G][H]

	TOWNSIO_MIDI_CARD1GEN2_DATREG1=0x04A8,     // 2nd Gen MIDI-1 according to Linux midi.c
	TOWNSIO_MIDI_CARD1GEN2_CMDREG1=0x04A9,     // 2nd Gen MIDI-1
	TOWNSIO_MIDI_CARD1GEN2_DATREG2=0x04AC,     // 2nd Gen MIDI-1 according to Linux midi.c
	TOWNSIO_MIDI_CARD1GEN2_CMDREG2=0x04AD,     // 2nd Gen MIDI-1
	TOWNSIO_MIDI_CARD1GEN2_FIFODAT=0x04AA,     // 2nd Gen MIDI-1 according to Linux midi.c
	TOWNSIO_MIDI_CARD1GEN2_FIFOREG=0x04AB,     // 2nd Gen MIDI-1

	TOWNSIO_MIDI_INT_MASK_SEND=0x0E70,    // MIDI SEND interrupt MASK
	TOWNSIO_MIDI_INT_MASK_RECEIVE=0x0E71, // MIDI RECEIVE interrupt MASK

	TOWNSIO_MIDI_INT_MASK_SEND_FMT401GEN2=0x4A0, // MIDI INT Mask for FMT-401 Second Gen (according to Linux midi.c)
	TOWNSIO_MIDI_INT_MASK_RECEIVE_FMT401GEN2=0x4A1, // MIDI INT Mask for FMT-401 Second Gen (according to Linux midi.c)

	// Probably >>
	TOWNSIO_MIDI_TIMER_INT_CTRL_INT_REASON=0x0E73,
	TOWNSIO_MIDI_TIMER0_COUNT=             0x0E74,
	TOWNSIO_MIDI_TIMER1_COUNT=             0x0E75,
	TOWNSIO_MIDI_TIMER2_COUNT=             0x0E76,
	TOWNSIO_MIDI_TIMER_CTRL=               0x0E77,
	// Probably <<



	TOWNSIO_CMOS_BASE=           0x3000,
	TOWNSIO_CMOS_END=            0x4000,

	TOWNSIO_ANALOGPALETTE_CODE=  0xFD90,
	TOWNSIO_ANALOGPALETTE_BLUE=  0xFD92,
	TOWNSIO_ANALOGPALETTE_RED=   0xFD94,
	TOWNSIO_ANALOGPALETTE_GREEN= 0xFD96,

	TOWNSIO_FMR_DIGITALPALETTE0= 0xFD98,
	TOWNSIO_FMR_DIGITALPALETTE1= 0xFD99,
	TOWNSIO_FMR_DIGITALPALETTE2= 0xFD9A,
	TOWNSIO_FMR_DIGITALPALETTE3= 0xFD9B,
	TOWNSIO_FMR_DIGITALPALETTE4= 0xFD9C,
	TOWNSIO_FMR_DIGITALPALETTE5= 0xFD9D,
	TOWNSIO_FMR_DIGITALPALETTE6= 0xFD9E,
	TOWNSIO_FMR_DIGITALPALETTE7= 0xFD9F,

	TOWNSIO_HSYNC_VSYNC=         0xFDA0,
	TOWNSIO_CRTC_OUTPUT_CONTROL= 0xFDA0,

	TOWNSIO_CRT_OUTPUT_CONTROL_READ=0xFDA2, // FM TOWNS Technical Databook p.802
	TOWNSIO_CRT_READ_COMPATIBLE= 0xFDA4,    // FM TOWNS Technical Databook p.803

	TOWNSIO_FMR_VRAMMASK=        0xFF81, 
	// Not official.  But 2MX BIOS is obviously writing it.
	// It apparently works same ax memory-mapped I/O 000CFF81H.
	TOWNSIO_FMR_VRAMDISPLAYMODE= 0xFF82, 
	// Not official.  But, since FMR_VRAMMASK is also mapped to I/O FF81H, FF82H may be too.
	TOWNSIO_FMR_VRAMPAGESEL=     0xFF83, 
	// Not official.  But, since FMR_VRAMMASK is also mapped to I/O FF81H, FF83H may be too.

	// The 4th Unit Series ACT4 Zero uses FF86 for HSYNC and VSYNC.
	TOWNSIO_FMR_HSYNC_VSYNC=     0xFF86,

	TOWNSIO_FMR_VRAMDISPLAYMODE_READ=0xFF88, // FM TOWNS Technical Databook p.803  Memory-Mapped 0xCFF88

	TOWNSIO_KANJI_JISCODE_HIGH=  0xFF94,
	TOWNSIO_KANJI_JISCODE_LOW=   0xFF95,
	TOWNSIO_KANJI_PTN_HIGH=      0xFF96,
	TOWNSIO_KANJI_PTN_LOW=       0xFF97,
	TOWNSIO_KVRAM_OR_ANKFONT=    0xFF99,

	TOWNSIO_KANJI_CG_ROW=        0xFF9E, // FM TOWNS Technical Databook p.803  Memory-Mapped 0xCFF9E

	// 0x2000 to 0x2FFF must be open for testing for Fujitsu's internal development.
	// [2] pp.12
	// I take two addresses for VM-Host communication.
	// In the VM, push parameters to TOWNSIO_VM_HOST_IF_DATA, and then write a command.
	TOWNSIO_VM_HOST_IF_CMD_STATUS=0x2386,
	TOWNSIO_VM_HOST_IF_DATA=      0x2387,

	TOWNSIO_VM_TGDRV=             0x2388,

	TOWNSIO_VNDRV_APICHECK=       0x2F10,
	TOWNSIO_VNDRV_ENABLE=         0x2F12,
	TOWNSIO_VNDRV_COMMAND=        0x2F14,
	TOWNSIO_VNDRV_AUXCOMMAND=     0x2F18,

	TOWNS_QUICK_DEBUG_BREAK=      0xEA,  // Writing to this I/O port will break the VM.
	TOWNS_QUICK_DEBUG_STATE=      0xEB,  // Writing to this I/O port will show the VM state, not break.
};

#endif
