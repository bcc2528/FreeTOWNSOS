IOSYS_SEGMENT			EQU		0040h
IOSYS_CS				EQU		0050h

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

SYSVARS_FIRST_DPB		EQU		00h
SYSVARS_FIRST_CDS		EQU		16H
SYSVARS_NUM_DPB			EQU		20h
SYSVARS_NUM_CDS			EQU		21h
SYSVARS_SFT				EQU		72h

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



; Must be part of SYSDEV struct, but may be different in DOS 3.x
SYSDEV_DEVFLAG_CONS_IN						EQU		001h	; (Common with SF_DEVFLAGS)
SYSDEV_DEVFLAG_CONS_OUT						EQU		002h	; If CHARDEV (Common with SF_DEVFLAGS)
SYSDEV_DEVFLAG_32BIT						EQU		002h	; If BLOCKDEV DOS 3.31+
SYSDEV_DEVFLAG_NUL							EQU		004h	; (Common with SF_DEVFLAGS)
SYSDEV_DEVFLAG_CLOCK						EQU		008h	; (Common with SF_DEVFLAGS)
SYSDEV_DEVFLAG_INT_29H_OUT					EQU		010h	; (Common with SF_DEVFLAGS)
; bit5 unused 0020h
SYSDEV_DEVFLAG_EXTFUNC_SUPPORTED			EQU		040h	; DOS 3.2+
SYSDEV_DEVFLAG_IOCTL_QUERY_SUPPORTED		EQU		080h	; DOS 5.0+
; bit8 unused 0100h
; bit9 unused 0200h
; bit10 unused 0400h
SYSDEV_DEVFLAG_OPEN_CLOSE_SUPPORTED			EQU		0800h	; DOS 3.0+
; bit 12 unused 1000h
SYSDEV_DEVFLAG_OUT_UNTIL_BUSY_SUPPORTED		EQU		2000h	; If CHARDEV  DOS 3.0+ 
SYSDEV_DEVFLAG_MEDIA_DESC_IN_FAT_REQUIRED	EQU		2000h	; IF BLOCKDEV
SYSDEV_DEVFLAG_IOCTL_SUPPORTED				EQU		4000h
SYSDEV_DEVFLAG_IS_CHARDEV					EQU		8000h	; IS_BLOCKDEV if 0.

STRUC					SYSDEV
SYSDEV_NEXT				DD      ?			;+00h
SYSDEV_DEVFLAGS			DW      ?			;+04h
SYSDEV_STRATEGY			DW      ?			;+06h
SYSDEV_INTERRUPT		DW      ?			;+08h
SYSDEV_NAME        		DB      8 DUP (?)	;+0Ah
ENDSTRUC



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

BPB_POS_IN_IPL			EQU		000Bh

STRUC					BIOS_PARAMETER_BLOCK
BPB_BYTES_PER_SECTOR   	RESW 	1    ; uint16_t
BPB_SECTOR_PER_CLUSTER 	RESB 	1    ; uint8_t 
BPB_RESERVED_SECTOR_CT 	RESW 	1    ; uint16_t
BPB_NUM_FATS           	RESB 	1    ; uint8_t 
BPB_NUM_ROOT_DIR_ENT   	RESW 	1    ; uint16_t
BPB_TOTALNUM_SECT      	RESW 	1    ; uint16_t
BPB_MEDIA_DESC         	RESB 	1    ; uint8_t 
BPB_SECT_PER_FAT       	RESW 	1    ; uint16_t
BPB_SECT_PER_TRACK     	RESW 	1    ; uint16_t
BPB_NUM_HEADS          	RESW 	1    ; uint16_t
BPB_HIDDEN_SECT        	RESW 	1    ; uint16_t
BPB_32BIT_NUM_SECT     	RESD 	1    ; uint32_t
; BPB_32BIT_NUM_SECT is used for indicating the location of IO.SYS in FM-R/TOWNS IPL.
ENDSTRUC



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



STRUC					DRIVE_PARAM_BLOCK
DPB_DRIVE_CODE			RESB		1 		; 0=A drive
DPB_UNIT_CODE			RESB		1		; +01h
DPB_BYTES_PER_SECTOR	RESW		1		; +02h
DPB_CLUSTER_MASK		RESB		1		; +04h
DPB_CLUSTER_SHIFT		RESB		1		; +05h  SHL CLUSTER to get to SECTOR from the top of Data Sector
DPB_FIRST_FAT_SECTOR	RESW		1		; +06h
DPB_NUM_FATS			RESB		1		; +08h
DPB_NUM_DIRENTS			RESW		1		; +09h
DPB_FIRST_DATA_SECTOR	RESW		1		; +0bh
DPB_MAX_CLUSTER_NUM		RESW		1		; +0dh
DPB_SECTORS_PER_FAT		RESB		1		; +0fh  1 byte in DOS V3.x  2 bytes V4.x and later  How many sectors to skip to get to the root dir.
DPB_FIRST_DIR_SECTOR	RESW		1		; +10h
DPB_PTR_TO_DEV_DRIVER	RESD		1		; +12h
DPB_MEDIA_DESC_TYPE		RESB		1		; +16h  See BPB_MEDIA_DESC_TYPE
DPB_ACCESS_FLAG			RESB		1		; +17h
DPB_PTR_TO_NEXT_DPB		RESW		1		; +18h
						RESW		1		; +1Ah  Set in Finalize_DPB_Loop in MSINIT.ASM(MS-DOS V2.0 soruce)
DPB_LAST_CLUSTER_ALLOC	RESW		1		; +1Ch  Is this LAST_CLUSTER_ALLOC?  Or is this current working directory.
DPB_NUM_FREE_CLUSTERS	RESW		1		; +1Eh
										; 20h bytes total
ENDSTRUC

DPB_ACCESS_FLAG_ACCESSED	EQU			000h
DPB_ACCESS_FLAG_UNACCESSED	EQU			0ffh



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



MAX_NUM_CDS				EQU		26

CDS_TYPE_SUBSTED		EQU		01000h
CDS_TYPE_JOINED			EQU		02000h
CDS_TYPE_VALID			EQU		04000h
CDS_TYPE_REDIRECTED		EQU		08000h

STRUC					CURRENT_DIR_STRUCT
CDS_CURDIR				RESB		043h
CDS_DRIVE_TYPE			RESW		1	; +43h
CDS_DRIVE_PARAM_BLOCK	RESD		1	; +45h
CDS_CURDIR_CLUSTER		RESW		1	; +49h 0=root dir, 0ffffh unavailable?
CDS_UNUSED				RESD		1	; +4bh
CDS_CURDIR_ROOTLEN		RESW		1	; +4fh Skipping this number of bytes skips drive letter part.
ENDSTRUC

CDS_CURDIR_LEN_MAX		EQU		042h



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



DIRENT_SHIFT			EQU		5
DIRENT_LENGTH			EQU		32
; Bit shift 5 times means a DIRENT takes 32 bytes.

DIRENT_ATTR_READONLY	EQU		01h
DIRENT_ATTR_HIDDEN		EQU		02h
DIRENT_ATTR_SYSTEM		EQU		04h
DIRENT_ATTR_VOLLABEL	EQU		08h
DIRENT_ATTR_DIRECTORY	EQU		10h
DIRENT_ATTR_ARCHIVE		EQU		20h

DIRENT_ATTR_READONLY	EQU		01h
DIRENT_ATTR_HIDDEN		EQU		02h
DIRENT_ATTR_SYSTEM		EQU		04h
DIRENT_ATTR_VOLLABEL	EQU		08h
DIRENT_ATTR_DIRECTORY	EQU		10h
DIRENT_ATTR_ARCHIVE		EQU		20h

STRUC					DIRECTORY_ENTRY
DIRENT_FILENAME:		RESB		8 ;dup (?)	; +00h
DIRENT_EXT:				RESB		3 ;dup (?)	; +08h
DIRENT_ATTR:			RESB		1			; +0Bh b0=ReadOnly  b1=Hidden  b2=System  b3=VolumeLabel  b4=Directory  b5=Archive
DIRENT_UNUSED:			RESB		10 ;dup (?)	; +0Ch
DIRENT_TIME:			RESW		1			; +16h HHHHHMMMMMMSSSSS (SSSSS=seconds/2)
DIRENT_DATE:			RESW		1			; +18h YYYYYYYMMMMDDDDD (D=1 to 31, M=1 to 12, Y=Year-1980)
DIRENT_FIRST_CLUSTER:	RESW		1			; +1Ah
DIRENT_FILE_SIZE:		RESD		1			; +1Ch
											; 20h bytes total
ENDSTRUC




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



DEVREQ_CMD_INIT					EQU		00h
DEVREQ_CMD_MEDIA_CHECK			EQU		01h
DEVREQ_CMD_BUILD_BPB			EQU		02h
DEVREQ_CMD_IOCTL_READ			EQU		03h
DEVREQ_CMD_READ					EQU		04h
DEVREQ_CMD_NON_DEST_READ		EQU		05h
DEVREQ_CMD_INPUT_STATUS			EQU		06h
DEVREQ_CMD_FLUSH_INPUT			EQU		07h
DEVREQ_CMD_WRITE				EQU		08h
DEVREQ_CMD_WRITE_VERIFY			EQU		09h
DEVREQ_CMD_OUTPUT_STATUS		EQU		0Ah
DEVREQ_CMD_FLUSH_OUTPUT			EQU		0Bh
DEVREQ_CMD_IOCTL_WRITE			EQU		0Ch
DEVREQ_CMD_OPEN					EQU		0Dh
DEVREQ_CMD_CLOSE				EQU		0Eh
DEVREQ_CMD_CHECK_RMV_MEDIA		EQU		0Fh
DEVREQ_CMD_OUTPUT_UNTIL_BUSY	EQU		10h
DEVREQ_CMD_GENERIC_IOCTL		EQU		13h	; V3.2+?
DEVREQ_CMD_GET_DRIVE_MAP		EQU		17h	; V3.2+?
DEVREQ_CMD_SET_DRIVE_MAP		EQU		18h	; V3.2+?
DEVREQ_CMD_QUERY_IOCTL			EQU		19h	; V5.0+?

DEVREQ_STATUS_ERROR				EQU		8000h
DEVREQ_STATUS_NOERROR			EQU		0100h

DEVERR_WRITE_PROTECTED	EQU		00h
DEVERR_UNKNOWN_UNIT		EQU		01h
DEVERR_DRIVE_NOT_READY	EQU		02h
DEVERR_UNKNOWN_COMMAND	EQU		03h
DEVERR_CRC_ERROR		EQU		04h
DEVERR_BAD_REQ_LEN		EQU		05h
DEVERR_SEEK_ERROR		EQU		06h
DEVERR_UNKNOWN_MEDIUM	EQU		07h
DEVERR_SECTOR_NOT_FOUND	EQU		08h
DEVERR_OUT_OF_PAPER		EQU		09h
DEVERR_WRITE_FAULT		EQU		0ah
DEVERR_READ_FAULT		EQU		0bh
DEVERR_GENERAL_FAULT	EQU		0ch
DEVERR_UNDEFINED		EQU		0dh
DEVERR_DISK_CHANGED		EQU		0fh



; Device Driver Request Header
; See https://sites.google.com/site/pcdosretro/dostables
STRUC					DRIVER_REQ_HEADER
REQ_LEN					RESB		1
REQ_UNIT				RESB		1
REQ_COMMAND				RESB		1
REQ_STATUS				RESW		1
						RESB		8
ENDSTRUC

; For Init
REQ_INIT_LEN							EQU		1AH
REQ_INIT_CMD							EQU		00H

REQ_INIT_NUM_UNIT_RETURN				EQU		0Dh
REQ_INIT_END_OF_RESIDENT_CODE_RETURN	EQU		0Eh
REQ_INIT_BPB_ARRAY_RETURN				EQU		12h		; In:"DEVICE="  Out:BPB array pointer
REQ_INIT_DRIVE_CODE_FIRST_UNIT			EQU		16h		; 0=A drive

REQ_READ_WRITE_MEDIA_DESC				EQU		0Dh		; Also used from DEVREQ_CMD_MEDIA_CHECK
REQ_READ_WRITE_BUFFER_PTR				EQU		0Eh
REQ_READ_WRITE_BUFFER_SEG				EQU		10h
REQ_READ_WRITE_SECTOR_COUNT				EQU		12h
REQ_READ_WRITE_LBA						EQU		14h
REQ_READ_POINTER_TO_DISK_LABEL			EQU		16h
REQ_READ_WRITE_LBA32					EQU		1Ah

REQ_READ_WRITE_LENGTH					EQU		REQ_READ_WRITE_SECTOR_COUNT

REQ_MEDIACHECK_MEDIA_DESC				EQU		0Dh
REQ_MEDIACHECK_CODE_RETURN				EQU		0Eh
REQ_MEDIACHECK_VOLUME_LABEL_RETURN		EQU		0Fh

MEDIACHECK_CODE_UNCHANGED				EQU		1
MEDIACHECK_CODE_UNKNOWN					EQU		0
MEDIACHECK_CODE_CHANGED					EQU		-1

REQ_BUILDBPB_LEN						EQU		16h
REQ_BUILDBPB_PTR_RETURN					EQU		12h


CONSDEV_FLAG_BUSY		EQU		0200h

STRUC					CONSDEV_REQ_HEADER
						RESB		1
						RESB		1
						RESB		1
						RESW		1
						RESB		8
CONSDEV_REQ_CHR			RESB		1	; +0dh
ENDSTRUC




STRUC					RW_REQ_HEADER
						RESB		1
						RESB		1
						RESB		1
						RESW		1
						RESB		8
RW_REQ_MEDIA_DESC		RESB		1
RW_REQ_DATABUF_PTR		RESD		1
RW_REQ_SECTOR_COUNT		RESW		1
RW_REQ_START_SECTOR		RESW		1
ENDSTRUC



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


STRUC					EXEC_PARAMBLOCK
EXEC_ENVSEGSRC			RESW		1
EXEC_PARAMETER_PTR		RESD		1
EXEC_FIRST_FCB			RESD		1
EXEC_SECOND_FCB			RESD		1
EXEC_INITIALSSSP		RESD		1	; For AL=1 (Load but not exec)
EXEC_INITIALCSIP		RESD		1	; For AL=1 (Load but not exec)
ENDSTRUC

STRUC					LOAD_OVERLAY_PARAMBLOCK
LOAD_OVERLAY_SEG		RESW		1
LOAD_OVERLAY_RELOCFACTOR	RESW		1
ENDSTRUC


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

SFT_ENTRY_SIZE			EQU		035h
STRUC					SFT_HEADER
SFT_NEXT				RESD	1
SFT_COUNT				RESW	1
ENDSTRUC

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

STRUC					MEM_CTL_BLOCK
MCB_CHAIN_ID			RESB		1		; MS-DOS 2.0 source calls it as ARENA_SIGNATURE
MCB_PID					RESW		1
MCB_BLOCK_SIZE			RESW		1
						RESB		11
ENDSTRUC

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

DPB_LENGTH_DOS6					EQU		21h

TAB						EQU		9
