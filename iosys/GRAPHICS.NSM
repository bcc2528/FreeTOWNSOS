;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


GRAPH_INIT:

						MOV		DX,IO_FMR_GVRAMDISPMODE
						MOV		AL,27H  ; Show all planes, write to Page 0 (Page 0 is upper half of VRAM Layer 0)
						OUT		DX,AL

						MOV		DX,IO_FMR_GVRAMMASK
						MOV		AL,0FH  ; Write to all planes
						OUT		DX,AL

						RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


GRAPH_VRAMMODE:
						PUSH	DX
						PUSH	AX
						MOV		AL,0
						JMP		SHORT GRAPH_SET_VRAM_OR_RAM_MODE

GRAPH_RAMMODE:			PUSH	DX
						PUSH	AX
						MOV		AL,80H

GRAPH_SET_VRAM_OR_RAM_MODE:
						MOV		DX,IO_FMR_VRAM_OR_MAINRAM
						OUT		DX,AL
						POP		AX
						POP		DX
						RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


GRAPH_CLS:
						PUSH	ES
						PUSH	DI
						PUSH	AX
						PUSH	CX

						MOV		AL,15
						CALL	GRAPH_COLOR

						MOV		AX,0C000H
						MOV		ES,AX
						MOV		DI,0
						MOV		CX,80*400/2
						MOV		AX,0
						REP STOSW

						POP		CX
						POP		AX
						POP		DI
						POP		ES
						RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


GRAPH_CLEAR_FIVE_BELOW:
						PUSH	ES
						PUSH	DI
						PUSH	AX
						PUSH	CX

						MOV		AL,15
						CALL	GRAPH_COLOR

						MOV		AX,0C000H
						MOV		ES,AX
						MOV		DI,80*5*16
						MOV		CX,80*20*16/2
						MOV		AX,0
						REP STOSW

						POP		CX
						POP		AX
						POP		DI
						POP		ES
						RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; Input
;   AL Color (0-15)
; DX will be destroyed.
GRAPH_COLOR:
						AND		AL,0FH
						MOV		DX,IO_FMR_GVRAMMASK
						OUT		DX,AL
						RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; Input
; AH      X
; AL      Y
; Output
; DI      VRAM Address
GRAPH_LOCATE:
						PUSH	AX
						PUSH	CX

						MOVZX	DI,AH

						MOV		CX,80*16
						XOR		AH,AH
						MUL		CX

						ADD		DI,AX

						POP		CX
						POP		AX
						RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ; DI:  VRAM ADDRESS
; ; AH:  ASCII Code
; ; C0000H must be in FM-R VRAM mode.
; DRAWFONT				PROC
; 						PUSH	DS
; 						SUB		SP,8
; 
; 						MOV		DX,0C000H
; 						MOV		DS,DX
; 
; 						MOV		DX,IO_KVRAM_OR_ANKFONT
; 						MOV		AL,1
; 						OUT		DX,AL
; 
; 						; ANK Font ROM CA000H-
; 						MOV		AL,8
; 						MUL		AH
; 						ADD		AX,0A000H
; 
; 						MOV		CX,8
; 						MOV		SI,AX
; @@:
; 						MOV		DH,DS:[SI]
; 						MOV		[DI],DH
; 						INC		SI
; 						ADD		DI,50H
; 						LOOP	@b
; 
; 						ADD		SP,8
; 						POP		DS
; 						RET
; DRAWFONT				ENDP



; DI:  VRAM ADDRESS
; AH:  ASCII Code
; C0000H must be in FM-R VRAM mode.
; BX preserved
; DS preserved
GRAPH_DRAWFONT_TALL:
						PUSH	DS

						MOV		DX,0C000H
						MOV		DS,DX

						MOV		DX,IO_KVRAM_OR_ANKFONT
						MOV		AL,1
						OUT		DX,AL

						; ANK Font ROM CA000H-
						MOV		AL,8
						MUL		AH
						ADD		AX,0A000H

						MOV		CX,8
						MOV		SI,AX
GRAPH_DRAWFONT_TALL_LOOP:
						MOV		DH,DS:[SI]
						MOV		[DI],DH
						MOV		[DI+50H],DH
						INC		SI
						ADD		DI,0A0H
						LOOP	GRAPH_DRAWFONT_TALL_LOOP

						MOV		DX,IO_KVRAM_OR_ANKFONT
						XOR		AL,AL
						OUT		DX,AL

						POP		DS
						RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Input
;   DS:SI     String
;   DI        VRAM Address
GRAPH_PRINT_TALL:
						PUSH	ES
						PUSH	SI
						PUSH	DI
						PUSH	AX
						PUSH	DX
						PUSH	CX

						MOV		AX,0C000H
						MOV		ES,AX
						MOV		BX,SI
GRAPH_PRINT_TALL_LOOP:
						MOV		SI,BX
						LODSB
						CMP		AL,0
						JE		SHORT GRAPH_PRINT_TALL_BREAK
						MOV		AH,AL
						CALL	GRAPH_DRAWFONT_TALL
						ADD		DI,1-80*16
						ADD		BX,1
						JMP		GRAPH_PRINT_TALL_LOOP
GRAPH_PRINT_TALL_BREAK:
						POP		CX
						POP		DX
						POP		AX
						POP		DI
						POP		SI
						POP		ES
						RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; Input
;   DI   First address of the line
;        DI will be destroyed
GRAPH_ERASE_LINE_TALL:

						PUSH	ES
						PUSH	AX
						PUSH	CX

						MOV		AX,0C000H
						MOV		ES,AX

						XOR		AX,AX
						MOV		CX,80*16/2
						REP STOSW

						POP		CX
						POP		AX
						POP		ES
						RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; INPUT
;   AX LOCATION
;   SI 0FFH-TERMINATED SEQUENCE OF C-STRINGS   Ex:  'A''B''C' 0 'X''Y''Z' 0  ffH
GRAPH_DRAW_TEXT:

						PUSH	AX
						PUSH	SI
						CALL	GRAPH_LOCATE
						CALL	GRAPH_PRINT_TALL
						POP		SI
						POP		AX

GRAPH_DRAW_TEXT_LOOP:
						CMP		BYTE DS:[SI],0
						JE		SHORT GRAPH_DRAW_TEXT_BREAK
						INC		SI
						JMP		GRAPH_DRAW_TEXT_LOOP

GRAPH_DRAW_TEXT_BREAK:
						INC		SI
						INC		AL

						CMP		BYTE [SI],0FFH
						JNE		GRAPH_DRAW_TEXT

						RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
